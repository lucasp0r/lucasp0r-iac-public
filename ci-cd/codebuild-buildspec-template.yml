version: 0.2

env:
  secrets-manager:
    CLUSTER_NAME: $PROFILE/platform/notification-manager:CLUSTER_NAME
    ECR_PATH: $PROFILE/platform/notification-manager:ECR_PATH
    DEPLOYMENT_NAME: $PROFILE/platform/notification-manager:DEPLOYMENT_NAME
    K8S_YML_PATH: $PROFILE/platform/notification-manager:K8S_YML_PATH

phases:
  install:
    runtime-versions:
      docker: 18
      java: openjdk11
    commands:
      - export MAVEN_CONFIG=''
      - echo installing maven...
      - apt-get update -y
      - apt-get install -y maven
      - curl -o /bin/kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl
      - chmod +x /bin/kubectl
  pre_build:
    commands:
      - echo connecting ecr
      - aws sts assume-role --role-arn "arn:aws:iam::1231231231:role/CodeBuild-Deployer" --role-session-name "codebuild-notification-mgr"
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - pip3 install awscli --upgrade --user
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
  build:
    commands:
      - echo Build started on `date`
      - ./mvnw install -DskipTests
      - echo Building the Docker image...
      - COMMIT_DATE=$(date +"%m-%d-%Y-%H%M-")
      - COMMIT_TAG_MAN=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | awk  '{ COMMIT_TAG=substr($0, 1, 5); print COMMIT_TAG; }' )
      - SERVER_REPO_BASE=$ECR_PATH:$COMMIT_DATE$COMMIT_TAG_MAN
      - docker build -t $SERVER_REPO_BASE .

  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $SERVER_REPO_BASE
      - echo deploying to cluster...
      - aws eks get-token --cluster-name eks-cluster
      - kubectl --kubeconfig /root/.kube/config get nodes
      - kubectl --kubeconfig /root/.kube/config apply -f $K8S_YML_PATH -n $PROFILE
      - kubectl --kubeconfig /root/.kube/config set image deployment/$DEPLOYMENT_NAME $DEPLOYMENT_NAME=$SERVER_REPO_BASE -n $PROFILE

cache:
  paths:
    - '/root/.m2/**/*'