version: 0.2

env:
  secrets-manager:
    # global account secrets
    DOMAIN: $PROFILE/commons/microservice/codebuild:DOMAIN
    PROJECT: $PROFILE/commons/microservice/codebuild:PROJECT
    ACCOUNT_NUMBER: $PROFILE/commons/microservice/codebuild:ACCOUNT_NUMBER
    CLUSTER_NAME: $PROFILE/commons/microservice/codebuild:CLUSTER_NAME
    DOCKER_BASE_LAYER_REGISTRY_PREFIX: $PROFILE/commons/microservice/codebuild:DOCKER_BASE_LAYER_REGISTRY_PREFIX
    # specific module secrets
    DOCKER_BASE_LAYER_REGISTRY_NAME: $PROFILE/commons/microservice/codebuild/customer:DOCKER_BASE_LAYER_REGISTRY_NAME
    DOCKER_BASE_LAYER_REGISTRY_VERSION: $PROFILE/commons/microservice/codebuild/customer:DOCKER_BASE_LAYER_REGISTRY_VERSION
    NAMESPACE: $PROFILE/commons/microservice/codebuild/customer:NAMESPACE
    K8S_DEPLOYMENT_NAME: $PROFILE/commons/microservice/codebuild/customer:K8S_DEPLOYMENT_NAME
    
phases:
  install:
    runtime-versions:
      docker: 18
      java: openjdk11
    commands:
      - echo installing maven...
      - apt-get update -y
      - apt-get install -y maven
      - curl -o /bin/kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl
      - chmod +x /bin/kubectl

  pre_build:
    commands:
      - echo connecting ecr
      - aws sts assume-role --role-arn $ROLE_ARN --role-session-name $SESSION_NAME
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - pip3 install awscli --upgrade --user
      - export CODEARTIFACT_TOKEN=`aws codeartifact get-authorization-token --domain $DOMAIN --domain-owner $ACCOUNT_NUMBER --query authorizationToken --region $AWS_DEFAULT_REGION --output text`
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
  build:
    commands:
      - echo Build started on `date`
      - mvn clean package -f ./providers/pom.xml
      - echo Building the Docker image...
      - COMMIT_DATE=$(date +"%m-%d-%Y-%H%M-")
      - COMMIT_TAG_MAN=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | awk  '{ COMMIT_TAG=substr($0, 1, 5); print COMMIT_TAG; }' )
      - SERVER_REPO_BASE=$ACCOUNT_NUMBER.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/commons-profile-idm:$COMMIT_DATE$COMMIT_TAG_MAN
      - docker build -t $SERVER_REPO_BASE . --build-arg registryPrefix=$DOCKER_BASE_LAYER_REGISTRY_PREFIX --build-arg registryName=$DOCKER_BASE_LAYER_REGISTRY_NAME --build-arg registryVersion=$DOCKER_BASE_LAYER_REGISTRY_VERSION

  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $SERVER_REPO_BASE
      - echo deploying to cluster...
      - aws eks get-token --cluster-name $CLUSTER_NAME
      - kubectl --kubeconfig /root/.kube/config get nodes
      - echo updating configmap...
      - kubectl --kubeconfig /root/.kube/config apply -f ./kubernetes/keycloak/$PROFILE/configmap.yaml -n $NAMESPACE
      - echo updating deployment...
      - envsubst < ./kubernetes/keycloak/$PROFILE/deployment.yaml | kubectl --kubeconfig /root/.kube/config -n $NAMESPACE apply -f - ; EXITCODE=$?
      - if ! kubectl rollout status deployment $K8S_DEPLOYMENT_NAME -n $NAMESPACE ; then kubectl rollout undo deployment $K8S_DEPLOYMENT_NAME -n $NAMESPACE; kubectl rollout status deployment $K8S_DEPLOYMENT_NAME -n $NAMESPACE; exit 1; fi
    
cache:
  paths:
    - '/root/.m2/**/*'
